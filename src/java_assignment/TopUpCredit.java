/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assignment;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author waich
 */
public class TopUpCredit extends javax.swing.JFrame {

    /**
     * Creates new form TopUpCredit
     */
    public TopUpCredit() {
        initComponents();
        readFromFile("CustomerData.txt");
        
    }
    private void writeToFile(String Customer, DefaultTableModel model) {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("CustomerData.txt"))) {
        for (int row = 0; row < model.getRowCount(); row++) {
            StringBuilder line = new StringBuilder();
            for (int col = 0; col < model.getColumnCount(); col++) {
                if (col > 0) {
                    line.append(",");
                }
                line.append(model.getValueAt(row, col));
            }
            writer.write(line.toString());
            writer.newLine();
        }
    } catch (IOException e) {
        e.printStackTrace(); // Handle the exception according to your needs
    }
}
    
   private void readFromFile(String Customer) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); 

    try (BufferedReader reader = new BufferedReader(new FileReader("CustomerData.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] data = line.split(",");
            model.addRow(new Object[]{data[0], data[1], data[2], data[3], data[4]});
        }

        JOptionPane.showMessageDialog(this, "Data read from file successfully");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error reading from file");
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CustomerID = new javax.swing.JTextField();
        FindCusID = new javax.swing.JButton();
        topUp = new javax.swing.JTextField();
        TopUpB = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        receipt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Top UP Credit for customers ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Custoomer Name", "Contact Number", "Password", "Balance"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Customer ID");

        jLabel5.setText("Top UP credit");

        CustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerIDActionPerformed(evt);
            }
        });

        FindCusID.setText("Find");
        FindCusID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindCusIDActionPerformed(evt);
            }
        });

        topUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpActionPerformed(evt);
            }
        });

        TopUpB.setText("Top up");
        TopUpB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopUpBActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        receipt.setText("Receipt");
        receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(FindCusID)
                .addGap(113, 113, 113)
                .addComponent(save)
                .addGap(51, 51, 51)
                .addComponent(receipt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(412, 412, 412)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(topUp, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(TopUpB)
                                .addGap(145, 145, 145))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(topUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TopUpB)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save)
                            .addComponent(receipt))
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(CustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FindCusID))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        
        //set data text field when raw 
        String cusID = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
        String cusName = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        String contact = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
        String cuspassword = tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString();
        String balance = tblModel.getValueAt(jTable1.getSelectedRow(), 4).toString();
    }//GEN-LAST:event_jTable1MouseClicked

    private void FindCusIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindCusIDActionPerformed
        // TODO add your handling code here:
        String inputCusID = CustomerID.getText().trim();
          DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
    for (int i = 0; i < tblModel.getRowCount(); i++) {
        // Get the Customer ID from the current row
        String tableCusID = tblModel.getValueAt(i, 0).toString();

        // Check if the inputCusID matches the tableCusID
        if (inputCusID.equals(tableCusID)) {
            // Match found, update GUI or perform any other actions
            JOptionPane.showMessageDialog(this, "Customer ID found!");
            // You can also set the selected row in the table if needed
            jTable1.setRowSelectionInterval(i, i);
            return; // exit the loop since we found a match
        }
    }

    // If no match is found
    JOptionPane.showMessageDialog(this, "Customer ID not found!");
    }//GEN-LAST:event_FindCusIDActionPerformed

    private void TopUpBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopUpBActionPerformed
        // TODO add your handling code here:
         int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a customer from the table.");
        return;
    }

    // Read the current balance from column 4
    DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
    String currentBalanceStr = tblModel.getValueAt(selectedRow, 4).toString();

    // Parse the current balance to a double
    double currentBalance = Double.parseDouble(currentBalanceStr);

    // Read the topUp value from the JTextField
    String topUpValueStr = topUp.getText().trim();

    // Check if the topUp value is a valid number
    try {
        double topUpValue = Double.parseDouble(topUpValueStr);

        // Update the balance with the topUp value
        double newBalance = currentBalance + topUpValue;

        // Update the table with the new balance
        tblModel.setValueAt(newBalance, selectedRow, 4);

        JOptionPane.showMessageDialog(this, "Top-up successful. New balance: " + newBalance);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid top-up value. Please enter a valid number.");
    }
    }//GEN-LAST:event_TopUpBActionPerformed

    private void topUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topUpActionPerformed

    private void CustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerIDActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here
         try (BufferedWriter writer = new BufferedWriter(new FileWriter("CustomerData.txt"))) {
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

        for (int i = 0; i < tblModel.getRowCount(); i++) {
            String cusID = tblModel.getValueAt(i, 0).toString();
            String cusName = tblModel.getValueAt(i, 1).toString();
            String contact = tblModel.getValueAt(i, 2).toString();
            String cuspassword = tblModel.getValueAt(i, 3).toString();
            String balance = tblModel.getValueAt(i, 4).toString();

            String line = String.join(",", cusID, cusName, contact, cuspassword, balance);
            writer.write(line);
            writer.newLine();
        }

        JOptionPane.showMessageDialog(this, "Data saved to file successfully");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving to file");
    }
        
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Admin_function admfun = new Admin_function();
        admfun.show();
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a customer from the table.");
        return;
    }

    // Read the customer ID from the selected row
    DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
    String customerID = tblModel.getValueAt(selectedRow, 0).toString();

    // Read the top-up value from the JTextField
    String topUpValueStr = topUp.getText().trim();

    // Check if the topUp value is a valid number
    try {
        double topUpValue = Double.parseDouble(topUpValueStr);

        // Display a message with the customer ID and top-up amount
        String message = String.format("Customer ID: %s\nTop-up Amount: %.2f", customerID, topUpValue);
        JOptionPane.showMessageDialog(this, message, "Top-up Receipt", JOptionPane.INFORMATION_MESSAGE);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid top-up value. Please enter a valid number.");
    }
    }//GEN-LAST:event_receiptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TopUpCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TopUpCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TopUpCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TopUpCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TopUpCredit().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CustomerID;
    private javax.swing.JButton FindCusID;
    private javax.swing.JButton TopUpB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton receipt;
    private javax.swing.JButton save;
    private javax.swing.JTextField topUp;
    // End of variables declaration//GEN-END:variables

    
}
