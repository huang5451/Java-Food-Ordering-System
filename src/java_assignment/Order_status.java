/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assignment;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author waich
 */

public class Order_status extends javax.swing.JFrame {
    

     private void writeToFile(String status) throws IOException {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("OrderData.txt"))) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int row = 0; row < model.getRowCount(); row++) {
            String orderid = model.getValueAt(row, 0).toString();
            String itemid = model.getValueAt(row, 1).toString();
            String itemname = model.getValueAt(row, 2).toString();
            String itemprice = model.getValueAt(row, 3).toString();
            String itemquantity = model.getValueAt(row, 4).toString();
            String customerid = model.getValueAt(row, 5).toString();
            String customername = model.getValueAt(row, 6).toString();
            String totalprice = model.getValueAt(row, 7).toString();
            String runnerid = model.getValueAt(row, 8).toString();
            String date = model.getValueAt(row, 9).toString();
            String Order_sta = model.getValueAt(row, 10).toString();
            String confirma = model.getValueAt(row, 11).toString();
            

            // Write data to file
            writer.write(orderid + "," + itemid + "," + itemname + "," + itemprice+ "," + itemquantity + 
                    "," + customerid+ "," + customername + "," + totalprice+ "," + runnerid+ ","+ date+ ","  + Order_sta+ "," + confirma);
            writer.newLine();
        }
        JOptionPane.showMessageDialog(this, "Data written to file successfully");
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error writing to file");
    }
}
    
    
    
    private void readFromFile(String status) {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);

    try (BufferedReader reader = new BufferedReader(new FileReader("OrderData.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] data = line.split(",");
            //model.addRow(new Object[]{data[0], data[1], data[2], data[3],data[4], data[5], data[6], data[7],data[8], data[9], data[10],data[11]});
            model.addRow(data);
        }

        JOptionPane.showMessageDialog(this, "Data read from file successfully");
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error reading from file");
    }
}
 
    private static void setText(String orderStatus) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * Creates new form Order_status
     */
    public Order_status() {
        initComponents();
        readFromFile("OrderData.txt");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        prndingBtn = new javax.swing.JButton();
        shippedBtn = new javax.swing.JButton();
        reachBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        AcceptBtn = new javax.swing.JButton();
        DeclineBtn = new javax.swing.JButton();
        confirm = new javax.swing.JTextField();
        statusPSR = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Update Order Status and Confirnmation ");

        jLabel4.setText("Action");

        prndingBtn.setText("Pending");
        prndingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prndingBtnActionPerformed(evt);
            }
        });

        shippedBtn.setText("Shipped");
        shippedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shippedBtnActionPerformed(evt);
            }
        });

        reachBtn.setText("Reach");
        reachBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reachBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Item ID", "Item name", "Item Price", "Item Quatity", "Customer ID", "Customer Name", "Total Price Order", "Runner ID", "Date", "Order Status", "Confirmation"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel2.setText("Confirmation Order ");

        AcceptBtn.setText("Accept");
        AcceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptBtnActionPerformed(evt);
            }
        });

        DeclineBtn.setText("Decline");
        DeclineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeclineBtnActionPerformed(evt);
            }
        });

        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        statusPSR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusPSRActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel3.setText("After the action adn confirmation order please click on tbutton save to save data");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prndingBtn)
                        .addGap(18, 18, 18)
                        .addComponent(shippedBtn)
                        .addGap(18, 18, 18)
                        .addComponent(reachBtn)
                        .addGap(33, 33, 33)
                        .addComponent(statusPSR, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AcceptBtn)
                        .addGap(40, 40, 40)
                        .addComponent(DeclineBtn)
                        .addGap(18, 18, 18)
                        .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(119, 119, 119))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(599, 599, 599)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(660, 660, 660)
                    .addComponent(jButton1)
                    .addContainerGap(660, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prndingBtn)
                    .addComponent(shippedBtn)
                    .addComponent(reachBtn)
                    .addComponent(AcceptBtn)
                    .addComponent(DeclineBtn)
                    .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusPSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(276, 276, 276)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(276, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reachBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reachBtnActionPerformed
        JOptionPane.showMessageDialog(this, "Reach to the customer's destination.");

    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model to "Reach destination"
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setValueAt("Reach destination", selectedRow, 10);
        statusPSR.setText("Reach destination");
        setText("Reach destination");
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
    }//GEN-LAST:event_reachBtnActionPerformed

    private void prndingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prndingBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        JOptionPane.showMessageDialog(this, "Pending order");

    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model to "Pending"
        
        tblModel.setValueAt("Pending", selectedRow, 10);
        statusPSR.setText("pending");
        setText("Pending");
        
        
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
    
    
    
        
        
    }//GEN-LAST:event_prndingBtnActionPerformed
    //Table status
    private void updateOrderStatus(String status) {
    // Get selected row from jTable1
    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        jTable1.setValueAt(status, selectedRow, 10);
        jTable1.setValueAt(status, selectedRow, 11);
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
}
    
    
    private void shippedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shippedBtnActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Shipment.");

    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model to "Shipped"
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setValueAt("Shipped", selectedRow, 10);
        statusPSR.setText("Shipped");
        setText("Shipped");
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
    }//GEN-LAST:event_shippedBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

    // Get data from the selected row
    String orderID = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
    String itemID = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
    String itemName = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
    String itemPrice = tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString();
    String itemQuantity = tblModel.getValueAt(jTable1.getSelectedRow(), 4).toString();
    String customerID = tblModel.getValueAt(jTable1.getSelectedRow(), 5).toString();
    String customerName = tblModel.getValueAt(jTable1.getSelectedRow(), 6).toString();
    String totalPrice = tblModel.getValueAt(jTable1.getSelectedRow(), 7).toString();
    String deliveryRunner = tblModel.getValueAt(jTable1.getSelectedRow(), 8).toString();
    String datecount = tblModel.getValueAt(jTable1.getSelectedRow(), 9).toString();
    String orderStatus = tblModel.getValueAt(jTable1.getSelectedRow(), 10).toString();
    String confirmation = tblModel.getValueAt(jTable1.getSelectedRow(), 11).toString();
    
    // Set data to the text fields
    confirm.setText(confirmation);
    Order_status.setText(orderStatus);
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void AcceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptBtnActionPerformed
        // TODO add your handling code here:
        
        JOptionPane.showMessageDialog(this, "Accept.");

    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model to "Shipped"
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setValueAt("Accept", selectedRow, 11);
        confirm.setText("Accept");
        setText("Accept");
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
    
    
    
    
    
    }//GEN-LAST:event_AcceptBtnActionPerformed

    private void DeclineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeclineBtnActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Decline.");

    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model to "Shipped"
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setValueAt("Decline", selectedRow, 11);
        tblModel.setValueAt(0, selectedRow, 7);
        confirm.setText("Decline");
        setText("Decline");
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
    }//GEN-LAST:event_DeclineBtnActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmActionPerformed

    private void statusPSRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusPSRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusPSRActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try {
        writeToFile("OrderData.txt");
    } catch (IOException ex) {
        Logger.getLogger(Order_status.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error saving data to file");
    }
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Vendor_manageItem rud2 = new Vendor_manageItem();
        rud2.show();

        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Vendor_manageItem rud2 = new Vendor_manageItem();
        rud2.show();

        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order_status.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order_status().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptBtn;
    private javax.swing.JButton DeclineBtn;
    private javax.swing.JTextField confirm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton prndingBtn;
    private javax.swing.JButton reachBtn;
    private javax.swing.JButton save;
    private javax.swing.JButton shippedBtn;
    private javax.swing.JTextField statusPSR;
    // End of variables declaration//GEN-END:variables
}

