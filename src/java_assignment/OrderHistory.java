/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assignment;
import java.util.Date;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author waich
 */
public class OrderHistory extends javax.swing.JFrame {

    private String formattedDate;
    private String formattedMonth;

    /**
     * Creates new form OrderHistory
     */
    public OrderHistory() {
        initComponents();
        readFromFile("status.txt");
    }
    
    private void readFromFile(String status) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0); // Clear existing data

    try (BufferedReader reader = new BufferedReader(new FileReader("status.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] data = line.split(",");
            model.addRow(new Object[]{data[0], data[1], data[2], data[3],data[4], data[5], data[6], data[7],data[8], data[9], data[10],data[11]});
        }

        JOptionPane.showMessageDialog(this, "Data read from file successfully");
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error reading from file");
    }
}
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dailyBtn = new javax.swing.JButton();
        monthlyBtn = new javax.swing.JButton();
        quarterlyBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        daily = new javax.swing.JTextField();
        Amount = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        amountEarn1 = new javax.swing.JTextField();
        month = new javax.swing.JTextField();
        quarterly = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Order History and Revenue");
        jLabel1.setMaximumSize(new java.awt.Dimension(100, 100));
        jLabel1.setPreferredSize(new java.awt.Dimension(120, 30));

        dailyBtn.setText("Filter by day");
        dailyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyBtnActionPerformed(evt);
            }
        });

        monthlyBtn.setText("Filter by month");
        monthlyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyBtnActionPerformed(evt);
            }
        });

        quarterlyBtn.setText("Filter by Quearterly");
        quarterlyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quarterlyBtnActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Item ID", "Item name", "Item Price", "Item Quantity", "Customer ID", "Customer Name", "Total Price", "Runner ID", "Date", "Order Status", "Confirmation"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jCalendar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCalendar1MouseClicked(evt);
            }
        });

        jMonthChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMonthChooser1MouseClicked(evt);
            }
        });

        daily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyActionPerformed(evt);
            }
        });

        Amount.setText("Amount earn");
        Amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountActionPerformed(evt);
            }
        });

        jLabel2.setText("Sum of amount");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quarterly 1", "Quarterly 2", "Quarterly 3", "Quarterly 4" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        amountEarn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountEarn1ActionPerformed(evt);
            }
        });

        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        quarterly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quarterlyActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dailyBtn)
                                .addGap(213, 213, 213))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 15, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(daily, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(monthlyBtn)
                            .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quarterlyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quarterly))
                        .addGap(158, 158, 158)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(amountEarn1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Amount))
                        .addGap(45, 45, 45))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dailyBtn, monthlyBtn, quarterlyBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(quarterlyBtn)
                                .addComponent(monthlyBtn)
                                .addComponent(dailyBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(amountEarn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(Amount)
                                        .addGap(41, 41, 41))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quarterly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(20, 20, 20))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(daily, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dailyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyBtnActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(this, "Daily history for :");
        quarterly.setText("");
        month.setText("");
        Date selectedDate = jCalendar1.getDate();

    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    formattedDate = dateFormat.format(selectedDate);

    
    daily.setText(formattedDate);
    
    filterTableByDate(formattedDate);
    
    JOptionPane.showMessageDialog(this, "Daily history for: " + formattedDate);
    }//GEN-LAST:event_dailyBtnActionPerformed

    private void monthlyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyBtnActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(this, "Monthly history");
         quarterly.setText("");
    daily.setText("");
         
    int selectedMonth = jMonthChooser1.getMonth() + 1; // Month is 0-based, so add 1
    formattedMonth = String.format("%02d", selectedMonth);
    
    
    month.setText(formattedMonth);
    filterTableByMonth(formattedMonth);

    
    JOptionPane.showMessageDialog(this, "Monthly history for: " + formattedMonth);
        
    
    //clear selection that u choose before and  make more clear on the format
    
        //int selectedMonth = jMonthChooser1.getMonth() + 1;
          //formattedDate = String.format("%02d-%d", selectedMonth);
           //month.setText(formattedDate);
           // JOptionPane.showMessageDialog(this, "Monthly history for: " + formattedDate);
         //month.setText(formattedDate);
    }//GEN-LAST:event_monthlyBtnActionPerformed

    private void quarterlyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quarterlyBtnActionPerformed
        // TODO add your handling code here:
        month.setText("");
        daily.setText("");
        JOptionPane.showMessageDialog(this, "Quarterly history");
        String selectedQuarter = (String) jComboBox1.getSelectedItem();
        quarterly.setText(selectedQuarter);
        
         String startMonth, midMonth, endMonth;
    switch (selectedQuarter) {
        case "Quarterly 1":
            startMonth = "01";
            midMonth = "02";
            endMonth = "03";
            break;
        case "Quarterly 2":
            startMonth = "04";
            midMonth = "05";
            endMonth = "06";
            break;
        case "Quarterly 3":
            startMonth = "07";
            midMonth = "08";
            endMonth = "09";
            break;
        case "Quarterly 4":
            startMonth = "10";
            midMonth = "11";
            endMonth = "12";
            break;
        default:
            startMonth = "01";
            midMonth = "06";
            endMonth = "12";
    }

   
    String quarterMonthPattern = String.format("\\d{2}-(%s|%s|%s)-\\d{2}", startMonth, midMonth, endMonth);

    
    filterTableByQuarter(quarterMonthPattern);
        
    }//GEN-LAST:event_quarterlyBtnActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
         DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();

    
    String orderID = tblModel.getValueAt(jTable2.getSelectedRow(), 0).toString();
    String itemID = tblModel.getValueAt(jTable2.getSelectedRow(), 1).toString();
    String itemName = tblModel.getValueAt(jTable2.getSelectedRow(), 2).toString();
    String itemPrice = tblModel.getValueAt(jTable2.getSelectedRow(), 3).toString();
    String itemQuantity = tblModel.getValueAt(jTable2.getSelectedRow(), 4).toString();
    String customerID = tblModel.getValueAt(jTable2.getSelectedRow(), 5).toString();
    String customerName = tblModel.getValueAt(jTable2.getSelectedRow(), 6).toString();
    String totalPrice = tblModel.getValueAt(jTable2.getSelectedRow(), 7).toString();
    String deliveryRunner = tblModel.getValueAt(jTable2.getSelectedRow(), 8).toString();
    String datecount = tblModel.getValueAt(jTable2.getSelectedRow(), 9).toString();
    String orderStatus = tblModel.getValueAt(jTable2.getSelectedRow(), 10).toString();
    String confirmation = tblModel.getValueAt(jTable2.getSelectedRow(), 11).toString();
    }//GEN-LAST:event_jTable2MouseClicked

    private void jCalendar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCalendar1MouseClicked
        
    }//GEN-LAST:event_jCalendar1MouseClicked

    private void jMonthChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMonthChooser1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMonthChooser1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void dailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_dailyActionPerformed

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void quarterlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quarterlyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quarterlyActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void amountEarn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountEarn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountEarn1ActionPerformed

    private void AmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountActionPerformed
        // TODO add your handling code here:
     String selectedDate = daily.getText(); 
    String selectedMonth = month.getText(); 
    String selectedQuarter = quarterly.getText(); 

    
    calculateTotalAmount(selectedDate, selectedMonth, selectedQuarter);

    
    JOptionPane.showMessageDialog(this, "Total amount calculated and displayed.");
    }//GEN-LAST:event_AmountActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Vendor_manageItem rud2 = new Vendor_manageItem();
        rud2.show();
        
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Amount;
    private javax.swing.JTextField amountEarn1;
    private javax.swing.JTextField daily;
    private javax.swing.JButton dailyBtn;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField month;
    private javax.swing.JButton monthlyBtn;
    private javax.swing.JTextField quarterly;
    private javax.swing.JButton quarterlyBtn;
    // End of variables declaration//GEN-END:variables

    private void filterTableByDate(String selectedDate) {
         
     DefaultTableModel model = (DefaultTableModel) jTable2.getModel(); // by date
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    jTable2.setRowSorter(sorter);

   
    
    RowFilter<Object, Object> rowFilter = RowFilter.regexFilter(selectedDate, 9);
    sorter.setRowFilter(rowFilter);
    }
    private void filterTableByMonth(String selectedMonth) {
         
     DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    jTable2.setRowSorter(sorter);

    
    RowFilter<Object, Object> rowFilter = RowFilter.regexFilter(String.format("\\d{2}-%s-\\d{2}", selectedMonth), 9);
    sorter.setRowFilter(rowFilter);

    }
    
    
    
    
    
    private void filterTableByQuarter(String quarterMonthPattern) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    jTable2.setRowSorter(sorter);

    
    RowFilter<Object, Object> rowFilter = RowFilter.regexFilter(quarterMonthPattern, 9);
    sorter.setRowFilter(rowFilter);
}
    
   private void calculateTotalAmount(String selectedDate, String selectedMonth, String selectedQuarter) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    double totalAmount = 0.0;

    
    for (int i = 0; i < model.getRowCount(); i++) {
        
        String dateStr = model.getValueAt(i, 9).toString();

       
        boolean includeRow = false;
        if (selectedDate != null && !selectedDate.isEmpty() && dateStr.equals(selectedDate)) {
            includeRow = true;
        } else if (selectedMonth != null && !selectedMonth.isEmpty() && dateStr.substring(5, 7).equals(selectedMonth)) {
            includeRow = true;
        } else if (selectedQuarter != null && !selectedQuarter.isEmpty()) {
            
            int startMonth = 0, endMonth = 0;
            switch (selectedQuarter) {
                case "Quarterly 1":
                    startMonth = 1;
                    endMonth = 3;
                    break;
                case "Quarterly 2":
                    startMonth = 4;
                    endMonth = 6;
                    break;
                case "Quarterly 3":
                    startMonth = 7;
                    endMonth = 9;
                    break;
                case "Quarterly 4":
                    startMonth = 10;
                    endMonth = 12;
                    break;
            }

            
            int month = Integer.parseInt(dateStr.substring(5, 7));
            if (month >= startMonth && month <= endMonth) {
                includeRow = true;
            }
        }

        
        if (includeRow) {
            String totalPriceStr = model.getValueAt(i, 7).toString();
            try {
                double totalPrice = Double.parseDouble(totalPriceStr);
                totalAmount += totalPrice;
            } catch (NumberFormatException e) {
                
                e.printStackTrace();
            }
        }
    }

    
    amountEarn1.setText(String.format("%.2f", totalAmount));
}
    
    
    
}

