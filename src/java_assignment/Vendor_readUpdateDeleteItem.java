/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assignment;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author waich
 */
public class Vendor_readUpdateDeleteItem extends javax.swing.JFrame {

    private createMenu create;
    
   
    public Vendor_readUpdateDeleteItem (){
        initComponents();
        create = new createMenu("","","","");
    }
    
    private void writeToFile(String assigItem) {
        
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("ItemData.txt"))) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        for (int row = 0; row < model.getRowCount(); row++) {
            String name = model.getValueAt(row, 0).toString();
            String description = model.getValueAt(row, 1).toString();
            String price = model.getValueAt(row, 2).toString();
            String id = model.getValueAt(row, 3).toString();

            // Write data to file
            writer.write(name + "," + description + "," + price + "," + id);
            writer.newLine();
        }

        JOptionPane.showMessageDialog(this, "Data written to file successfully");
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error writing to file");
    }
}
    
    private void readFromFile(String assigItem) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0); // Clear existing data

    try (BufferedReader reader = new BufferedReader(new FileReader("ItemData.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] data = line.split(",");
            model.addRow(new Object[]{data[0], data[1], data[2], data[3]});
        }

        JOptionPane.showMessageDialog(this, "Data read from file successfully");
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error reading from file");
    }
}
   
// Call this method when you want to load data from a file

    
private void updateOrderStatus(String status) {
    // Get selected row from jTable1
    int selectedRow = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRow != -1) {
        // Update the status in the jTable1 model
        jTable1.setValueAt(status, selectedRow, 1);
    } else {
        JOptionPane.showMessageDialog(this, "Please select a row from the table.");
    }
}
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        read_itemName = new javax.swing.JTextField();
        read_itemDescription = new javax.swing.JTextField();
        read_itemPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        UpdateItem = new javax.swing.JButton();
        DeleteItem = new javax.swing.JButton();
        CreateBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        read_itemID = new javax.swing.JTextField();
        loadFromFileButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Read , Update , Delete and Create Item");

        read_itemName.setText("//Name");
        read_itemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read_itemNameActionPerformed(evt);
            }
        });

        read_itemDescription.setText("//Description");
        read_itemDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read_itemDescriptionActionPerformed(evt);
            }
        });

        read_itemPrice.setText("//Price");
        read_itemPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read_itemPriceActionPerformed(evt);
            }
        });

        jLabel5.setText("Actions");

        UpdateItem.setText("Update");
        UpdateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateItemActionPerformed(evt);
            }
        });

        DeleteItem.setText("Delete");
        DeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemActionPerformed(evt);
            }
        });

        CreateBtn.setText("Create");
        CreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBtnActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Description", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        read_itemID.setText("//id");
        read_itemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                read_itemIDActionPerformed(evt);
            }
        });

        loadFromFileButton.setText("Load");
        loadFromFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFromFileButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Item ID");

        jLabel3.setText("Item Name");

        jLabel4.setText("Item Description");

        jLabel6.setText("Item Price");

        jLabel7.setText("After Create item Click on the buttton update to update the item");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(read_itemID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(read_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(read_itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(read_itemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CreateBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(DeleteItem)
                                .addComponent(UpdateItem)
                                .addComponent(loadFromFileButton)))
                        .addGap(50, 50, 50)))
                .addGap(272, 272, 272))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(403, 403, 403)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel5)
                .addGap(41, 41, 41)
                .addComponent(UpdateItem)
                .addGap(51, 51, 51)
                .addComponent(DeleteItem)
                .addGap(104, 104, 104)
                .addComponent(loadFromFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateBtn)
                    .addComponent(jLabel7))
                .addGap(152, 152, 152))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(read_itemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(read_itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(read_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(read_itemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2))
                .addGap(100, 100, 100))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateItemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel =(DefaultTableModel)jTable2.getModel();
    if(jTable2.getSelectedRow() !=-1){
        String id = read_itemID.getText();
        String name = read_itemName.getText();
        String des = read_itemDescription.getText();
        String price = read_itemPrice.getText();
        
        
        // Update values
        tblModel.setValueAt(id, jTable2.getSelectedRow(), 0);
        tblModel.setValueAt(name, jTable2.getSelectedRow(), 1);
        tblModel.setValueAt(des, jTable2.getSelectedRow(), 2);
        tblModel.setValueAt(price, jTable2.getSelectedRow(), 3);
        
        
        // Display success message
        writeToFile("ItemData.txt");
        JOptionPane.showMessageDialog(this, "Update Success");
    } else {
        if(jTable2.getRowCount() == 0){
            JOptionPane.showMessageDialog(this, "No rows in the table");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row");
        }
    }
        
    }//GEN-LAST:event_UpdateItemActionPerformed

    private void read_itemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_read_itemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_read_itemNameActionPerformed

    private void read_itemDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_read_itemDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_read_itemDescriptionActionPerformed

    private void read_itemPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_read_itemPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_read_itemPriceActionPerformed

    private void DeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemActionPerformed
        // TODO add your handling code here:
        
        
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
    int selectedRow = jTable2.getSelectedRow();
    if (selectedRow != -1) {
        tblModel.removeRow(selectedRow);
        writeToFile("ItemData.txt");
        JOptionPane.showMessageDialog(this, "Delete Success");
        
    } else {
        if (jTable2.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No rows in the table");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row");
        }
    }
     
    }//GEN-LAST:event_DeleteItemActionPerformed

    private void CreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBtnActionPerformed
        // TODO add your handling code here:
        /*Vendor_createItem ci2 = new Vendor_createItem();
        ci2.show(); //display Vendor_createItem here
        
        dispose(); */
        
        String ITEMID=read_itemID.getText();
        String ITEMNAME= read_itemName.getText();
        String ITEMDESCRIPTION=read_itemDescription.getText();
        String ITEMPRICE=read_itemPrice.getText();
        
        //set value
        
        create.setitemID(ITEMID);
        create.setitemName(ITEMNAME);
        create.setitemDescription(ITEMDESCRIPTION);
        create.setitemPrice(ITEMPRICE);
                
        if (read_itemID.getText().equals("")||read_itemDescription.getText().equals("")||read_itemName.getText().equals("")||read_itemPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter something before saving.");
        } else {
            // Continue with your save logic
            writeToFile("ItemData.txt");
            JOptionPane.showMessageDialog(this, "Success Create");
            JOptionPane.showMessageDialog(Vendor_readUpdateDeleteItem.this, create.toString());
        }
        
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        model.addRow(new Object[]{read_itemID.getText(),read_itemName.getText(),read_itemDescription.getText(),read_itemPrice.getText()});
    }//GEN-LAST:event_CreateBtnActionPerformed

    private void read_itemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_read_itemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_read_itemIDActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        
        //set data text field when raw 
        String tblID = tblModel.getValueAt(jTable2.getSelectedRow(), 0).toString();
        String tblName = tblModel.getValueAt(jTable2.getSelectedRow(), 1).toString();
        String tblDes = tblModel.getValueAt(jTable2.getSelectedRow(), 2).toString();
        String tblPrice = tblModel.getValueAt(jTable2.getSelectedRow(), 3).toString();
     
        //set to textfield
        read_itemID.setText(tblID);
        read_itemName.setText(tblName);
        read_itemDescription.setText(tblDes);
        read_itemPrice.setText(tblPrice);
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void loadFromFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFromFileButtonActionPerformed
        // TODO add your handling code here:
        readFromFile("ItemData.txt");
    }//GEN-LAST:event_loadFromFileButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Vendor_manageItem rud2 = new Vendor_manageItem();
        rud2.show();
        
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vendor_readUpdateDeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vendor_readUpdateDeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vendor_readUpdateDeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vendor_readUpdateDeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vendor_readUpdateDeleteItem().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateBtn;
    private javax.swing.JButton DeleteItem;
    private javax.swing.JButton UpdateItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton loadFromFileButton;
    private javax.swing.JTextField read_itemDescription;
    private javax.swing.JTextField read_itemID;
    private javax.swing.JTextField read_itemName;
    private javax.swing.JTextField read_itemPrice;
    // End of variables declaration//GEN-END:variables
}

class createMenu extends ManageCreate{
    
    public createMenu(String itemName, String itemDescription, String itemPrice, String itemID) {
        super(itemName, itemDescription, itemPrice, itemID);
    }
    
    public void setitemName(String itemName){
        super.setitemName(itemName);
    }
    
    public void setitemDescription(String itemDescription){
        super.setitemDescription(itemDescription);
    }
    public void setitemPrice(String itemPrice){
        super.setitemPrice(itemPrice);
    }
    public void setitemID(String itemID){
        super.setitemID(itemID);
    }
    
}